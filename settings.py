# ROI = Rectangle Of Interest (x, y, width, height)
# Левый и правый сектор определяют, в какой части изображания ищутся стенки
# Можешь менять, но они должны быть одинаковые по площади (width * height)
# Размеры полного изображения - 320 * 240 (width * height)
# LINESROI - для нахождения линий на полу (не зависит от LEFTROI и RIGHTROI)
LEFTROI = (0, 100, 100, 140)
RIGHTROI = (220, 100, 100, 140)
LINESROI = (0, 140, 320, 100)


# Для определения цветов
# Если тут проблемы, то в OpenMV IDE Инструменты => Машинное зрение => Threshold Editor
# Там подбираешь так, чтобы объект нужного цвета был белый, кортеж копируешь сюда
thresholds = [(0, 12, -128, 8, -10, 47)]  # Черные стенки
thresholds_blue_line = [(19, 100, -1, 20, -128, -15)]  # Синий цвет
thresholds_orange_line = [(0, 100, 3, 120, -4, 127)]  # Оранжевый цвет


# Хз почему, но тут вроде инвертировано, но проверь на тренировочной заезде
# Если при MIN_SPEED = 100 не тормозит, то ставь 0
MAX_SPEED = 40
MIN_SPEED = 100

# Угол, при котором он едет прямо (под нашего настрой)
ZERO_ANGLE = 6

# Угол, на который он будет поворачивать направо/налево при виде линий
# Для нашего робота может быть что-то другое, но важно, что
# ZERO_ANGLE - RIGHT_ANGLE  = ZERO_ANGLE - LEFT_ANGLE
RIGHT_ANGLE = -10
LEFT_ANGLE = 22

# Максимальный (по модулю) угол отклонения колес от оси, при котороый
# он едет прямо (под нашего настрой)
MAX_ANGLE = 36


# Возможные проблемы
# В случае стремительного движения в стенку на прямых участках
# Посмотри на 168 строку
# Там стоит "-" перед def_percent, поменяй, если вознилка проблема

# ПИД сейчас описан функцией, но не используется.
# Если найдете лучшим его изать, то чуть выше pid все коэфы
# Если нет, удали этот кусок кода
